@name ODM Gear By Naki
@persist Left Right [LeftPos RightPos Pos]:vector
@trigger none
runOnKeys(owner(),1)
interval(50)

if(first()){
    
    #rope(number index,entity ent1,vector v1,entity ent2,vector v2,number addlength,number width,string mat,number rigid)
    for(I=1,4){
        holoCreate(I)
        holoPos(I,entity():pos())
        holoAng(I,ang(0,0,0))
        holoAlpha(I,0)
    }
    MDL="models/hunter/plates/plate.mdl"
    P1=propSpawn(MDL,ang(0,0,0),1)
    P2=propSpawn(MDL,ang(0,0,0),1)
    P3=propSpawn(MDL,ang(0,0,0),1)
    P4=propSpawn(MDL,ang(0,0,0),1)
    Array=array(P1,P2,P3,P4)
    
    foreach(I,E:entity=Array){
        E:setNoCollideAll(1)
        E:setAlpha(0)
    }
    
    rope(1,P1,vec(0,0,0),P3,vec(0,0,0),0,2,"cable/cable",1)
    rope(2,P2,vec(0,0,0),P4,vec(0,0,0),0,2,"cable/cable",1)
    
    P1:parentTo(holoEntity(1))
    P2:parentTo(holoEntity(2))
    P3:parentTo(holoEntity(3))
    P4:parentTo(holoEntity(4))
}

if(owner():weapon():type()=="none"){
if(changed(owner():keyAttack1())&owner():keyAttack1()){
    Left=!Left
}

if(changed(owner():keyAttack2())&owner():keyAttack2()){
    Right=!Right
}
}
if(Left&!Right){
    Pos=LeftPos
}
if(Left){
    holoPos(3,owner():pos()+vec(0,0,0)+(-owner():right()*25))
    holoEntity(1):parent():applyForce(((owner():pos()-holoEntity(1):parent():pos()):normalized())*3000*(10+owner():keySprint()))
}else{
    holoPos(3,vec(0,0,0))
}
if(Right){
    holoPos(4,owner():pos()+vec(0,0,0)+(owner():right()*25))
    holoEntity(2):parent():applyForce(((owner():pos()-holoEntity(2):parent():pos()):normalized())*3000*(10+owner():keySprint()))
}else{
    holoPos(4,vec(0,0,0))
}
if(Right&!Left){
    Pos=RightPos
}
if(Right&Left){
    Pos=(LeftPos+RightPos)/2
}
if(!Right&!Left){
    Pos=vec(0,0,0)
}
if(Right|Left){
    owner():plyApplyForce(((-(owner():pos()-Pos):normalized())*100*(1+(owner():keySprint())*2))-owner():vel()*0.005+(0.028*owner():keySprint()))
}
LeftPos=holoEntity(1):pos()
RightPos=holoEntity(2):pos()

if(changed(Left)){
    if(Left){
        holoPos(1,owner():aimPos())
        holoParent(1,owner():aimEntity())
    }else{
        holoPos(1,vec(0,0,0))
        holoUnparent(1)
    }
}

if(changed(Right)){
    if(Right){
        holoPos(2,owner():aimPos())
        holoParent(2,owner():aimEntity())
    }else{
        holoPos(2,vec(0,0,0))
        holoUnparent(2)
    }
}
